// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE


function now(param) {
  return new Date(Date.now());
}

function dayLongString(day) {
  if (day < 3) {
    if (day !== 0) {
      if (day !== 1) {
        if (day !== 2) {
          return "";
        } else {
          return "Tuesday";
        }
      } else {
        return "Monday";
      }
    } else {
      return "Sunday";
    }
  } else if (day < 5) {
    if (day !== 3) {
      if (day !== 4) {
        return "";
      } else {
        return "Thursday";
      }
    } else {
      return "Wednesday";
    }
  } else if (day !== 5) {
    if (day !== 6) {
      return "";
    } else {
      return "Saturday";
    }
  } else {
    return "Friday";
  }
}

function dayShortString(day) {
  if (day < 3) {
    if (day !== 0) {
      if (day !== 1) {
        if (day !== 2) {
          return "";
        } else {
          return "Tue";
        }
      } else {
        return "Mon";
      }
    } else {
      return "Sun";
    }
  } else if (day < 5) {
    if (day !== 3) {
      if (day !== 4) {
        return "";
      } else {
        return "Thu";
      }
    } else {
      return "Wed";
    }
  } else if (day !== 5) {
    if (day !== 6) {
      return "";
    } else {
      return "Sat";
    }
  } else {
    return "Fri";
  }
}

function dayLetterString(day) {
  if (day < 3) {
    if (day !== 0) {
      if (day !== 1) {
        if (day !== 2) {
          return "";
        } else {
          return "T";
        }
      } else {
        return "M";
      }
    } else {
      return "S";
    }
  } else if (day < 5) {
    if (day !== 3) {
      if (day !== 4) {
        return "";
      } else {
        return "T";
      }
    } else {
      return "W";
    }
  } else if (day !== 5) {
    if (day !== 6) {
      return "";
    } else {
      return "S";
    }
  } else {
    return "F";
  }
}

function monthLongString(date) {
  var match = date.getMonth() + 1;
  if (match < 7) {
    if (match < 4) {
      if (match !== 1) {
        if (match !== 2) {
          if (match !== 3) {
            return "";
          } else {
            return "March";
          }
        } else {
          return "February";
        }
      } else {
        return "January";
      }
    } else if (match !== 4) {
      if (match !== 5) {
        if (match !== 6) {
          return "";
        } else {
          return "June";
        }
      } else {
        return "May";
      }
    } else {
      return "April";
    }
  } else if (match < 10) {
    if (match !== 7) {
      if (match !== 8) {
        if (match !== 9) {
          return "";
        } else {
          return "September";
        }
      } else {
        return "August";
      }
    } else {
      return "July";
    }
  } else if (match !== 10) {
    if (match !== 11) {
      if (match !== 12) {
        return "";
      } else {
        return "December";
      }
    } else {
      return "November";
    }
  } else {
    return "October";
  }
}

function monthShortString(date) {
  var match = date.getMonth() + 1;
  if (match < 7) {
    if (match < 4) {
      if (match !== 1) {
        if (match !== 2) {
          if (match !== 3) {
            return "";
          } else {
            return "Mar";
          }
        } else {
          return "Feb";
        }
      } else {
        return "Jan";
      }
    } else if (match !== 4) {
      if (match !== 5) {
        if (match !== 6) {
          return "";
        } else {
          return "Jun";
        }
      } else {
        return "May";
      }
    } else {
      return "Apr";
    }
  } else if (match < 10) {
    if (match !== 7) {
      if (match !== 8) {
        if (match !== 9) {
          return "";
        } else {
          return "Sep";
        }
      } else {
        return "Aug";
      }
    } else {
      return "Jul";
    }
  } else if (match !== 10) {
    if (match !== 11) {
      if (match !== 12) {
        return "";
      } else {
        return "Dec";
      }
    } else {
      return "Nov";
    }
  } else {
    return "Oct";
  }
}

function dateString(date) {
  return date.getDate().toString();
}

function dateExpand(date) {
  return date.toString();
}

function durationInMs(date1, date2) {
  return Math.abs(date1.valueOf() - date2.valueOf());
}

function msToS(ms) {
  return ms / 1000;
}

function msToMin(ms) {
  return ms / 1000 / 60;
}

function msToHours(ms) {
  return ms / 1000 / 60 / 60;
}

function msToDays(ms) {
  return ms / 1000 / 60 / 60 / 24;
}

function daysToHours(d) {
  return d * 24;
}

function hoursToDays(h) {
  return h / 24;
}

function minToHours(min) {
  return min / 60;
}

function hoursToMin(h) {
  return h * 60;
}

function daysToMin(d) {
  return d * 24 * 60;
}

function minToDays(min) {
  return min / 60 / 24;
}

function minToString(min) {
  var durationD = min / 60 / 24 | 0;
  var durationH = min / 60 - durationD * 24 | 0;
  var durationM = min - durationD * 24 * 60 - durationH * 60 | 0;
  var hasD = durationD > 0;
  var hasH = durationH > 0;
  var hasM = durationM > 0;
  return (
          hasD ? String(durationD) + ("d" + (
                hasH || hasM ? " " : ""
              )) : ""
        ) + ((
            hasH ? String(durationH) + ("h" + (
                  hasM ? " " : ""
                )) : ""
          ) + (
            hasM ? String(durationM) + "m" : (
                hasD || hasH ? "" : "0m"
              )
          ));
}

function copy(date) {
  return new Date(date.valueOf());
}

function toInt(date) {
  return date.valueOf() | 0;
}

function addDays(date, numberOfDays) {
  var d = new Date(date.valueOf());
  d.setDate(d.getDate() + numberOfDays);
  return d;
}

function addMinutes(date, numberOfMinutes) {
  var d = new Date(date.valueOf());
  d.setMinutes(d.getMinutes() + numberOfMinutes);
  return d;
}

function isBefore(a, b) {
  return a.getTime() < b.getTime();
}

function durationInHours(ends, starts) {
  var ms = ends.valueOf() - starts.valueOf();
  return ms / 1000 / 60 / 60;
}

function slotSizeInMin(ends, starts, slotDuration) {
  var s = ends.valueOf() - starts.valueOf();
  return s / slotDuration / 1000 / 60 | 0;
}

function firstDayOfWeek(firstDayOfWeekIndexOpt, givenDate) {
  var firstDayOfWeekIndex = firstDayOfWeekIndexOpt !== undefined ? firstDayOfWeekIndexOpt : 1;
  var dayOfWeek = givenDate.getDay() | 0;
  var firstDayOfWeek$1 = new Date(givenDate.valueOf());
  var diff = dayOfWeek >= firstDayOfWeekIndex ? dayOfWeek - firstDayOfWeekIndex | 0 : 6 - dayOfWeek | 0;
  firstDayOfWeek$1.setDate(givenDate.getDate() - diff);
  firstDayOfWeek$1.setHours(0, 0, 0, 0);
  return firstDayOfWeek$1;
}

function lastDayOfWeek(firstDayOfWeekIndexOpt, givenDate) {
  var firstDayOfWeekIndex = firstDayOfWeekIndexOpt !== undefined ? firstDayOfWeekIndexOpt : 1;
  var fdow = firstDayOfWeek(firstDayOfWeekIndex, givenDate);
  return new Date(fdow.getFullYear(), fdow.getMonth(), fdow.getDate() + 6, 23, 59, 59);
}

function firstDayOfMonth(date) {
  return new Date(date.getFullYear(), date.getMonth(), 1);
}

function lastDayOfMonth(date) {
  return new Date(date.getFullYear(), date.getMonth() + 1, 0, 23, 59, 59);
}

function min(d1, d2) {
  if (d1.getTime() < d2.getTime()) {
    return d1;
  } else {
    return d2;
  }
}

function max(d1, d2) {
  if (d1.getTime() > d2.getTime()) {
    return d1;
  } else {
    return d2;
  }
}

function weekDates(firstDayOfWeekIndexOpt, date) {
  var firstDayOfWeekIndex = firstDayOfWeekIndexOpt !== undefined ? firstDayOfWeekIndexOpt : 1;
  return /* tuple */[
          firstDayOfWeek(firstDayOfWeekIndex, date),
          lastDayOfWeek(firstDayOfWeekIndex, date)
        ];
}

function startOfDay(date) {
  return new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0);
}

function endOfDay(date) {
  return new Date(date.getFullYear(), date.getMonth(), date.getDate(), 23, 59, 59);
}

function hasOverlap(startA, endA, dateB) {
  var startB = startOfDay(dateB);
  var endB = endOfDay(dateB);
  if (startA.getTime() <= endB.getTime()) {
    return endA.getTime() >= startB.getTime();
  } else {
    return false;
  }
}

var slotDuration = 30;

export {
  now ,
  dayLongString ,
  dayShortString ,
  dayLetterString ,
  monthLongString ,
  monthShortString ,
  dateString ,
  dateExpand ,
  durationInMs ,
  msToS ,
  msToMin ,
  msToHours ,
  msToDays ,
  daysToHours ,
  hoursToDays ,
  minToHours ,
  hoursToMin ,
  daysToMin ,
  minToDays ,
  minToString ,
  copy ,
  toInt ,
  addDays ,
  addMinutes ,
  isBefore ,
  durationInHours ,
  slotDuration ,
  slotSizeInMin ,
  firstDayOfWeek ,
  lastDayOfWeek ,
  firstDayOfMonth ,
  lastDayOfMonth ,
  min ,
  max ,
  weekDates ,
  startOfDay ,
  endOfDay ,
  hasOverlap ,
  
}
/* No side effect */
